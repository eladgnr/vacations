services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 20

  web:
    build: .
    restart: unless-stopped
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - static_data:/app/staticfiles
      - ./media:/app/media
    ports:
      - "8000:8000"
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py loaddata data.json &&
        python manage.py runserver 0.0.0.0:8000
      "

  stats_backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./stats_backend:/app
      - static_data:/app/staticfiles
    ports:
      - "8001:8001"
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8001
      "

  frontend:
    build:
      context: ./fe_react_src
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./fe_react_src:/app
      - /app/node_modules
    environment:
      VITE_STATS_API_URL: "http://localhost:8001"
      VITE_WEB_API_URL: "http://localhost:8000"
    command: npm run dev -- --host 0.0.0.0 --port 5173

volumes:
  db_data:
  static_data:
